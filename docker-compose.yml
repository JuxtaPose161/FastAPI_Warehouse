services:
  db:
    image: postgres:latest
    container_name: db_app
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d postgres -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - db-data:/var/lib/postgresql/data

#  test-db:
#    image: postgres:latest
#    container_name: test_db_app
#    command: -p 6000
#    environment:
#      POSTGRES_USER: test
#      POSTGRES_PASSWORD: test
#      POSTGRES_DB: test
#    ports:
#      - "6000:6000"
#    healthcheck:
#      test: [ "CMD-SHELL", "pg_isready -d test -U test" ]
#      interval: 10s
#      timeout: 5s
#      retries: 3


  redis:
    image: redis:latest
    container_name: redis_app
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli", "--raw", "incr", "ping" ]

  app:
    build:
      context: .
    env_file:
      - .env
    container_name: app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  db-data:
